// <auto-generated />
using System;
using JOBSBD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JOBSBD.Migrations
{
    [DbContext(typeof(JOBSBDContext))]
    [Migration("20180919045233_Models")]
    partial class Models
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JOBSBD.Models.CompanyDetails", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress");

                    b.Property<string>("City");

                    b.Property<string>("CompanyAddress");

                    b.Property<string>("CompanyLogo");

                    b.Property<string>("ContactPersion");

                    b.Property<string>("Designation");

                    b.Property<int?>("IndustryTypeId");

                    b.Property<string>("Mobile");

                    b.Property<string>("Phone");

                    b.Property<string>("webSite");

                    b.HasKey("CompanyID");

                    b.HasIndex("IndustryTypeId");

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("JOBSBD.Models.Education", b =>
                {
                    b.Property<int>("EduID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achievement");

                    b.Property<decimal?>("CGPA");

                    b.Property<int?>("Duration");

                    b.Property<string>("Exam_Degree_Title");

                    b.Property<string>("Group_Major_Subject");

                    b.Property<string>("Institute_University");

                    b.Property<string>("Laval_Of_Education");

                    b.Property<int>("PersonalID");

                    b.Property<string>("Result");

                    b.Property<decimal?>("Scale");

                    b.Property<int?>("Year_Of_Passing");

                    b.HasKey("EduID");

                    b.HasIndex("PersonalID");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("JOBSBD.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company_Business");

                    b.Property<string>("Company_Name");

                    b.Property<string>("Department");

                    b.Property<string>("Designation");

                    b.Property<int?>("EducationID");

                    b.Property<DateTime?>("End_Date");

                    b.Property<int>("PersonalID");

                    b.Property<string>("Skill");

                    b.Property<DateTime?>("start_Date");

                    b.HasKey("ExperienceID");

                    b.HasIndex("PersonalID");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("JOBSBD.Models.IndustryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyType");

                    b.HasKey("Id");

                    b.ToTable("IndustryTypes");
                });

            modelBuilder.Entity("JOBSBD.Models.JobCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<int>("CompanyID");

                    b.HasKey("CategoryID");

                    b.HasIndex("CompanyID");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("JOBSBD.Models.JobDetails", b =>
                {
                    b.Property<int>("JobDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CV_Receiving_Option");

                    b.Property<int>("CategoryID");

                    b.Property<DateTime?>("DeadLine");

                    b.Property<string>("Employment_Status");

                    b.Property<string>("Job_Level");

                    b.Property<string>("Job_Title");

                    b.Property<int?>("No_Of_Vacancies");

                    b.Property<string>("Special_Instruction");

                    b.HasKey("JobDetailsID");

                    b.HasIndex("CategoryID");

                    b.ToTable("JobDetails");
                });

            modelBuilder.Entity("JOBSBD.Models.JobRequirement", b =>
                {
                    b.Property<int>("JobReqID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age_Maximum");

                    b.Property<int?>("Age_Minimum");

                    b.Property<string>("Area_Of_Experiance");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Company_Benefits");

                    b.Property<bool?>("Experiance_Needed");

                    b.Property<int?>("Festival_Bonus");

                    b.Property<string>("Job_Location");

                    b.Property<string>("Job_Responsibilities");

                    b.Property<string>("Other_Fecilities");

                    b.Property<string>("Salary_Maximum");

                    b.Property<string>("Salary_Minimum");

                    b.Property<string>("Salary_Type");

                    b.Property<string>("Skills");

                    b.Property<string>("Training_TradCourse");

                    b.HasKey("JobReqID");

                    b.HasIndex("CategoryID");

                    b.ToTable("JobRequirements");
                });

            modelBuilder.Entity("JOBSBD.Models.PersonalDetail", b =>
                {
                    b.Property<int>("PersonalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("FathersName");

                    b.Property<string>("MaritalStatus");

                    b.Property<string>("MothersName");

                    b.Property<string>("Nationnality");

                    b.Property<string>("Religion");

                    b.Property<string>("UserPicture");

                    b.HasKey("PersonalID");

                    b.ToTable("PersonalDetail");
                });

            modelBuilder.Entity("JOBSBD.Models.Training", b =>
                {
                    b.Property<int>("TrainingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Duration");

                    b.Property<string>("Institute");

                    b.Property<string>("Location");

                    b.Property<int>("PersonalID");

                    b.Property<string>("Topics_Covered");

                    b.Property<string>("Training_Title");

                    b.Property<int?>("Training_Year");

                    b.HasKey("TrainingID");

                    b.HasIndex("PersonalID");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("JOBSBD.Models.CompanyDetails", b =>
                {
                    b.HasOne("JOBSBD.Models.IndustryType")
                        .WithMany("CompanyDetails")
                        .HasForeignKey("IndustryTypeId");
                });

            modelBuilder.Entity("JOBSBD.Models.Education", b =>
                {
                    b.HasOne("JOBSBD.Models.PersonalDetail", "PersonalDetail")
                        .WithMany("Educations")
                        .HasForeignKey("PersonalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JOBSBD.Models.Experience", b =>
                {
                    b.HasOne("JOBSBD.Models.PersonalDetail", "PersonalDetail")
                        .WithMany("Experiences")
                        .HasForeignKey("PersonalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JOBSBD.Models.JobCategory", b =>
                {
                    b.HasOne("JOBSBD.Models.CompanyDetails", "CompanyDetails")
                        .WithMany("JobCategories")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JOBSBD.Models.JobDetails", b =>
                {
                    b.HasOne("JOBSBD.Models.JobCategory", "JobCategory")
                        .WithMany("JobDetails")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JOBSBD.Models.JobRequirement", b =>
                {
                    b.HasOne("JOBSBD.Models.JobCategory", "JobCategory")
                        .WithMany("JobRequirements")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JOBSBD.Models.Training", b =>
                {
                    b.HasOne("JOBSBD.Models.PersonalDetail", "PersonalDetail")
                        .WithMany("Trainings")
                        .HasForeignKey("PersonalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
